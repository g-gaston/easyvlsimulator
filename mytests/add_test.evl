// test adder by using random numbers

module lfsr10(output [9:0] r, input clk);

  wire [9:0] s;
  wire nx, x;

  assign r = s;

  evl_dff(s[0], x, clk);
  evl_dff(s[1], s[0], clk);
  evl_dff(s[2], s[1], clk);
  evl_dff(s[3], s[2], clk);
  evl_dff(s[4], s[3], clk);
  evl_dff(s[5], s[4], clk);
  evl_dff(s[6], s[5], clk);
  evl_dff(s[7], s[6], clk);
  evl_dff(s[8], s[7], clk);
  evl_dff(s[9], s[8], clk);

  xor(nx, s[9], s[6]);
  not(x, nx);

endmodule

module full_adder(output s, output co, input a, input b, input ci);

  wire ab, bc, ca;

  xor(s, a, b, ci);

  and(ab, a, b);
  and(bc, b, ci);
  and(ca, ci, a);

  or(co, ab, bc, ca);

endmodule

//Problema cuando el puerto de entrada y la net que se la pasa al module tienen el mismo nombre
module adder10(output [9:0] x, output y, input [9:0] z, input [9:0] l, input u);

  wire [10:0] c;

  assign x[0] = u;
  assign y = c[10];


  full_adder a0(x[0], c[1], a[0], b[0], c[0]);
  full_adder a1(x[1], c[2], a[1], b[1], c[1]);
  full_adder a2(x[2], c[3], a[2], b[2], c[2]);
  full_adder a3(x[3], c[4], a[3], b[3], c[3]);
  full_adder a4(x[4], c[5], a[4], b[4], c[4]);
  full_adder a5(x[5], c[6], a[5], b[5], c[5]);
  full_adder a6(x[6], c[7], a[6], b[6], c[6]);
  full_adder a7(x[7], c[8], a[7], b[7], c[7]);
  full_adder a8(x[8], c[9], a[8], b[8], c[8]);
  full_adder a9(x[9], c[10], a[9], b[9], c[9]);

endmodule

module test;

  // driver
  wire clk;
  wire [9:0] a, b;
  evl_one osss(a, b);

  // dut
  wire [10:0] s;
  wire zz;
  evl_zero(zz);
  adder10 dut(s[9:0], s[10], a, b, zz);



  // output
  evl_output test_out(a, b, s);

endmodule
